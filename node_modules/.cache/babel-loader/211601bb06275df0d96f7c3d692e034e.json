{"ast":null,"code":"var _jsxFileName = \"/Users/andrewburchett/thinkful/capstone/dontquit-stayfit-client/src/Goals/Goals.js\";\nimport React from 'react';\nimport './Goals.css';\nimport config from '../config';\nimport TokenService from '../Service/token-service';\n\nclass Goals extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      goals: [],\n      editGoal: null\n    };\n\n    this.componentDidMount = () => {\n      fetch(`${config.API_ENDPOINT}/goals`, {\n        headers: {\n          'Authorization': `Bearer ${TokenService.getAuthToken()}`\n        }\n      }).then(goalLog => {\n        if (!goalLog.ok) {\n          return goalLog.json().then(e => Promise.reject(e));\n        }\n\n        return goalLog.json();\n      }).then(goalLog => {\n        this.setState({\n          goals: goalLog,\n          date_created: new Date()\n        });\n      });\n    };\n\n    this.handleAddGoal = e => {\n      e.preventDefault();\n      let day = new Date();\n      const goal = e.target.content.value;\n      fetch(`${config.API_ENDPOINT}/goals`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${TokenService.getAuthToken()}`\n        },\n        body: JSON.stringify({\n          content: goal,\n          date_created: day.toDateString()\n        })\n      }).then(res => res.json()).then(goal => {\n        this.setState({\n          goals: [...this.state.goals, goal]\n        });\n        this.props.history.push('/goals');\n      });\n      e.target.reset();\n    };\n\n    this.deleteGoal = (e, index) => {\n      e.preventDefault();\n      console.log(index);\n      fetch(`${config.API_ENDPOINT}/goals/${index}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${TokenService.getAuthToken()}`\n        }\n      }).then(res => {\n        if (!res.ok) return res.json().then(e => Promise.reject(e));\n      }).then(() => {\n        this.setState({\n          goals: this.state.goals.filter(goal => goal.id !== index)\n        });\n      });\n    };\n\n    this.updateData = e => {\n      e.preventDefault();\n      const data = {\n        content: e.target.content.value\n      };\n      fetch(`${config.API_ENDPOINT}/goals/${this.state.editGoal}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${TokenService.getAuthToken()}`\n        },\n        body: JSON.stringify(data)\n      }).then(goal => {\n        this.setState({\n          goals: this.state.goals.map(goal => {\n            if (goal.id === this.state.editGoal) {\n              goal.content = data.content;\n            }\n\n            return goal;\n          }),\n          editGoal: null\n        });\n        this.props.history.push('/goals');\n      });\n    };\n\n    this.openEdit = id => {\n      this.setState({\n        editGoal: id\n      });\n    };\n\n    this.cancelAddedGoal = () => {\n      this.setState({\n        editGoal: null\n      });\n    };\n\n    this.handleClickCancel = () => {\n      this.props.history.push('/homepage');\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, \"WHAT ARE YOUR GOALS?\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleAddGoal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"goals\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"content\",\n      className: \"goals\",\n      rows: \"8\",\n      cols: \"25\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, \"ENTER\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleClickCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, \"CANCEL\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"goalsLog\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, \"GOALS:\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, this.state.goals.map((goal, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.deleteGoal(e, goal.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.openEdit(goal.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    }, \"Update\"), this.state.editGoal === goal.id ? /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.updateData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"goals\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"content\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 33\n      }\n    }, \"ENTER\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.cancelAddedGoal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 33\n      }\n    }, \"CANCEL\")) : \"\", goal.date_created, goal.content)))));\n  }\n\n}\n\nexport default Goals;","map":{"version":3,"sources":["/Users/andrewburchett/thinkful/capstone/dontquit-stayfit-client/src/Goals/Goals.js"],"names":["React","config","TokenService","Goals","Component","state","goals","editGoal","componentDidMount","fetch","API_ENDPOINT","headers","getAuthToken","then","goalLog","ok","json","e","Promise","reject","setState","date_created","Date","handleAddGoal","preventDefault","day","goal","target","content","value","method","body","JSON","stringify","toDateString","res","props","history","push","reset","deleteGoal","index","console","log","filter","id","updateData","data","map","openEdit","cancelAddedGoal","handleClickCancel","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './Goals.css'\nimport config from '../config'\nimport TokenService from '../Service/token-service'\n\nclass Goals extends React.Component {\n    \n    state = {\n        goals: [],\n        editGoal: null\n    }\n\n    componentDidMount = () => {\n        fetch(`${config.API_ENDPOINT}/goals`, {\n            headers: {\n                'Authorization': `Bearer ${TokenService.getAuthToken()}`\n            },\n        })\n        .then(goalLog => {\n            if(!goalLog.ok) {\n                return goalLog.json().then((e) => Promise.reject(e))\n            }\n            return goalLog.json()\n        })\n        .then(goalLog => {\n            this.setState({\n                goals: goalLog,\n                date_created: new Date()\n            })\n        })\n    }\n\n    \n    handleAddGoal = e => {\n        e.preventDefault()\n        let day = new Date();\n        const goal = e.target.content.value;\n        fetch(`${config.API_ENDPOINT}/goals`, {\n            method: 'POST', \n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${TokenService.getAuthToken()}`\n\n            },\n            body: JSON.stringify({\n                content: goal,\n                date_created: day.toDateString()\n            })\n        })\n        .then(res => res.json())\n        .then((goal) => {\n            this.setState({\n                goals: [...this.state.goals, goal]\n            })\n            this.props.history.push('/goals')\n        })\n        e.target.reset()\n    }\n\n    \n\n    deleteGoal = (e, index) => {\n        e.preventDefault()\n        console.log(index)\n        fetch(`${config.API_ENDPOINT}/goals/${index}`, {\n            method: 'DELETE', \n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${TokenService.getAuthToken()}`\n            }\n        })\n        .then(res => { \n            if (!res.ok) \n                return res.json().then(e => Promise.reject(e))\n        })\n        .then(() => {\n            this.setState({\n                goals: this.state.goals.filter(goal => goal.id !== index)\n            })\n        })   \n    }\n\n    updateData = (e) => {\n        e.preventDefault()\n        const data = { \n            content: e.target.content.value\n        }\n        fetch(`${config.API_ENDPOINT}/goals/${this.state.editGoal}`, {\n            method: 'PATCH', \n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify(data)\n        })\n        .then((goal) => {\n            this.setState({\n                goals: this.state.goals.map(goal => { \n                    if(goal.id === this.state.editGoal) {\n                        goal.content = data.content\n                    }\n                    return goal\n                }), \n                editGoal: null\n            })\n            this.props.history.push('/goals')\n        })\n    }\n\n    openEdit = (id) => {\n        this.setState({\n            editGoal: id\n        })\n    }\n\n    cancelAddedGoal = () => {\n        this.setState({\n            editGoal: null\n        })\n    }\n\n    handleClickCancel = () => {\n        this.props.history.push('/homepage')\n    }\n\n    render() {\n        return(\n            <div>\n                <main>\n                    <h2>WHAT ARE YOUR GOALS?</h2>\n                    <form onSubmit={this.handleAddGoal}>\n                        <label htmlFor='goals'></label>\n                        <textarea name=\"content\" className=\"goals\" rows=\"8\" cols=\"25\" required></textarea>\n                        <br/>\n                        <button type='submit' >ENTER</button>\n                        <button type='submit' onClick={this.handleClickCancel}>CANCEL</button>\n                    </form>\n                    <br/>\n                    <h4 className=\"goalsLog\">GOALS:</h4>\n                    <ul>\n                        {this.state.goals.map((goal, index) => (\n                            \n                            <li key={index}>\n                            <button onClick={(e) => this.deleteGoal(e, goal.id)}>Delete</button>\n                            <button onClick={() => this.openEdit(goal.id)}>Update</button>\n                            {this.state.editGoal === goal.id ? \n                            (<form onSubmit={this.updateData} >\n                                <label htmlFor='goals'></label>\n                                <textarea name=\"content\" required></textarea>\n                                <br/>\n                                <button type='submit'>ENTER</button>\n                                <button type='submit' onClick={this.cancelAddedGoal}>CANCEL</button>\n                            </form>) : \"\" }\n                                \n                                {goal.date_created}\n                                {goal.content}\n                                \n\n                            </li>\n                        ))}\n                    </ul>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default Goals"]},"metadata":{},"sourceType":"module"}